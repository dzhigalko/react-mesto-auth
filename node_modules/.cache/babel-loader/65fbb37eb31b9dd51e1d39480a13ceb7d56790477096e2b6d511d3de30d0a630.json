{"ast":null,"code":"import Api from \"./Api\";\nclass MestoApi extends Api {\n  constructor(options) {\n    const {\n      token,\n      ...rest\n    } = options;\n    super(rest);\n    this._token = token;\n  }\n  _makeRequest(url, options) {\n    options = options || {};\n    const {\n      headers = {},\n      ...rest\n    } = options;\n    const headersWithToken = {\n      ...headers,\n      authorization: this._token\n    };\n    return super._makeRequest(url, {\n      headersWithToken,\n      ...rest\n    });\n  }\n  getInitialCards() {\n    return this._makeRequest(\"/cards\");\n  }\n  getUserProfile() {\n    return this._makeRequest(\"/users/me\");\n  }\n  changeUserProfile(name, about) {\n    return this._makeRequest(\"/users/me\", {\n      method: \"PATCH\",\n      body: {\n        name: name,\n        about: about\n      }\n    });\n  }\n  addCard(name, link) {\n    return this._makeRequest(\"/cards\", {\n      method: \"POST\",\n      body: {\n        name: name,\n        link: link\n      }\n    });\n  }\n  deleteCard(id) {\n    return this._makeRequest(`/cards/${id}`, {\n      method: \"DELETE\"\n    });\n  }\n  addCardLike(id) {\n    return this._makeRequest(`/cards/${id}/likes`, {\n      method: \"PUT\"\n    });\n  }\n  deleteCardLike(id) {\n    return this._makeRequest(`/cards/${id}/likes`, {\n      method: \"DELETE\"\n    });\n  }\n  changeAvatar(avatar) {\n    return this._makeRequest(\"/users/me/avatar\", {\n      method: \"PATCH\",\n      body: {\n        avatar: avatar\n      }\n    });\n  }\n}\nconst mestoApi = new MestoApi({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  token: \"31abe394-3f89-489d-9ccd-e96da397bf7c\",\n  errorHandler: args => console.log(args)\n});\nexport default mestoApi;","map":{"version":3,"names":["Api","MestoApi","constructor","options","token","rest","_token","_makeRequest","url","headers","headersWithToken","authorization","getInitialCards","getUserProfile","changeUserProfile","name","about","method","body","addCard","link","deleteCard","id","addCardLike","deleteCardLike","changeAvatar","avatar","mestoApi","baseUrl","errorHandler","args","console","log"],"sources":["/Users/d.zhigalko/dev/react-mesto-auth/src/utils/mestoApi.js"],"sourcesContent":["import Api from \"./Api\"\n\nclass MestoApi extends Api {\n  constructor(options) {\n    const { token, ...rest } = options\n    super(rest)\n\n    this._token = token\n  }\n\n  _makeRequest(url, options) {\n    options = options || {}\n    const { headers = {}, ...rest } = options\n    const headersWithToken = {\n      ...headers,\n      authorization: this._token,\n    }\n\n    return super._makeRequest(url, {\n      headersWithToken,\n      ...rest\n    })\n  }\n\n  getInitialCards() {\n    return this._makeRequest(\"/cards\")\n  }\n\n  getUserProfile() {\n    return this._makeRequest(\"/users/me\")\n  }\n\n  changeUserProfile(name, about) {\n    return this._makeRequest(\"/users/me\", {\n      method: \"PATCH\",\n      body: {\n        name: name,\n        about: about\n      }\n    })\n  }\n\n  addCard(name, link) {\n    return this._makeRequest(\"/cards\", {\n      method: \"POST\",\n      body: {\n        name: name,\n        link: link\n      }\n    })\n  }\n\n  deleteCard(id) {\n    return this._makeRequest(`/cards/${id}`, { method: \"DELETE\" });\n  }\n\n  addCardLike(id) {\n    return this._makeRequest(`/cards/${id}/likes`, { method: \"PUT\" });\n  }\n\n  deleteCardLike(id) {\n    return this._makeRequest(`/cards/${id}/likes`, { method: \"DELETE\" });\n  }\n\n  changeAvatar(avatar) {\n    return this._makeRequest(\"/users/me/avatar\", {\n      method: \"PATCH\",\n      body: {\n        avatar: avatar\n      }\n    })\n  }\n}\n\nconst mestoApi = new MestoApi({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  token: \"31abe394-3f89-489d-9ccd-e96da397bf7c\",\n  errorHandler: (args) => console.log(args)}\n)\n\nexport default mestoApi;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,QAAQ,SAASD,GAAG,CAAC;EACzBE,WAAWA,CAACC,OAAO,EAAE;IACnB,MAAM;MAAEC,KAAK;MAAE,GAAGC;IAAK,CAAC,GAAGF,OAAO;IAClC,KAAK,CAACE,IAAI,CAAC;IAEX,IAAI,CAACC,MAAM,GAAGF,KAAK;EACrB;EAEAG,YAAYA,CAACC,GAAG,EAAEL,OAAO,EAAE;IACzBA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,MAAM;MAAEM,OAAO,GAAG,CAAC,CAAC;MAAE,GAAGJ;IAAK,CAAC,GAAGF,OAAO;IACzC,MAAMO,gBAAgB,GAAG;MACvB,GAAGD,OAAO;MACVE,aAAa,EAAE,IAAI,CAACL;IACtB,CAAC;IAED,OAAO,KAAK,CAACC,YAAY,CAACC,GAAG,EAAE;MAC7BE,gBAAgB;MAChB,GAAGL;IACL,CAAC,CAAC;EACJ;EAEAO,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACL,YAAY,CAAC,QAAQ,CAAC;EACpC;EAEAM,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI,CAACN,YAAY,CAAC,WAAW,CAAC;EACvC;EAEAO,iBAAiBA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAC7B,OAAO,IAAI,CAACT,YAAY,CAAC,WAAW,EAAE;MACpCU,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;QACJH,IAAI,EAAEA,IAAI;QACVC,KAAK,EAAEA;MACT;IACF,CAAC,CAAC;EACJ;EAEAG,OAAOA,CAACJ,IAAI,EAAEK,IAAI,EAAE;IAClB,OAAO,IAAI,CAACb,YAAY,CAAC,QAAQ,EAAE;MACjCU,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QACJH,IAAI,EAAEA,IAAI;QACVK,IAAI,EAAEA;MACR;IACF,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAACC,EAAE,EAAE;IACb,OAAO,IAAI,CAACf,YAAY,CAAE,UAASe,EAAG,EAAC,EAAE;MAAEL,MAAM,EAAE;IAAS,CAAC,CAAC;EAChE;EAEAM,WAAWA,CAACD,EAAE,EAAE;IACd,OAAO,IAAI,CAACf,YAAY,CAAE,UAASe,EAAG,QAAO,EAAE;MAAEL,MAAM,EAAE;IAAM,CAAC,CAAC;EACnE;EAEAO,cAAcA,CAACF,EAAE,EAAE;IACjB,OAAO,IAAI,CAACf,YAAY,CAAE,UAASe,EAAG,QAAO,EAAE;MAAEL,MAAM,EAAE;IAAS,CAAC,CAAC;EACtE;EAEAQ,YAAYA,CAACC,MAAM,EAAE;IACnB,OAAO,IAAI,CAACnB,YAAY,CAAC,kBAAkB,EAAE;MAC3CU,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;QACJQ,MAAM,EAAEA;MACV;IACF,CAAC,CAAC;EACJ;AACF;AAEA,MAAMC,QAAQ,GAAG,IAAI1B,QAAQ,CAAC;EAC5B2B,OAAO,EAAE,6CAA6C;EACtDxB,KAAK,EAAE,sCAAsC;EAC7CyB,YAAY,EAAGC,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI;AAAC,CAC3C,CAAC;AAED,eAAeH,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}