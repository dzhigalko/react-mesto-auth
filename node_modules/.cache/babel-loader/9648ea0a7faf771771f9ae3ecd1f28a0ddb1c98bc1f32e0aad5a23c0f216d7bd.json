{"ast":null,"code":"export default class Api {\n  constructor(options) {\n    const {\n      baseUrl,\n      errorHandler\n    } = options;\n    this._baseUrl = baseUrl.replace(/\\/+$/, '');\n    this._errorHandler = errorHandler;\n  }\n  _makeRequest(url, options) {\n    options = options || {};\n    const {\n      method = \"GET\",\n      body,\n      headers = {}\n    } = options;\n    let jsonBody = null;\n    if (body) {\n      jsonBody = JSON.stringify(body);\n    }\n    const relativeUrl = url.replace(/^\\/+/, '');\n    return fetch(`${this._baseUrl}/${relativeUrl}`, {\n      method: method,\n      body: jsonBody,\n      headers: {\n        ...headers,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        return Promise.reject({\n          \"response\": res\n        });\n      }\n      return res.json();\n    }).catch(this._errorHandler);\n  }\n}","map":{"version":3,"names":["Api","constructor","options","baseUrl","errorHandler","_baseUrl","replace","_errorHandler","_makeRequest","url","method","body","headers","jsonBody","JSON","stringify","relativeUrl","fetch","then","res","ok","Promise","reject","json","catch"],"sources":["/Users/d.zhigalko/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["export default class Api {\n  constructor(options) {\n    const { baseUrl, errorHandler } = options\n\n    this._baseUrl = baseUrl.replace(/\\/+$/, '')\n    this._errorHandler = errorHandler\n  }\n\n  _makeRequest(url, options) {\n    options = options || {}\n    const { method = \"GET\", body, headers = {} } = options\n    let jsonBody = null;\n\n    if (body) {\n      jsonBody = JSON.stringify(body)\n    }\n\n    const relativeUrl = url.replace(/^\\/+/, '')\n    return fetch(`${this._baseUrl}/${relativeUrl}`, {\n      method: method,\n      body: jsonBody,\n      headers: {\n        ...headers,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((res) => {\n        if (!res.ok) {\n          return Promise.reject({\"response\": res})\n        }\n\n        return res.json()\n      }).catch(this._errorHandler);\n  }\n}"],"mappings":"AAAA,eAAe,MAAMA,GAAG,CAAC;EACvBC,WAAWA,CAACC,OAAO,EAAE;IACnB,MAAM;MAAEC,OAAO;MAAEC;IAAa,CAAC,GAAGF,OAAO;IAEzC,IAAI,CAACG,QAAQ,GAAGF,OAAO,CAACG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAC3C,IAAI,CAACC,aAAa,GAAGH,YAAY;EACnC;EAEAI,YAAYA,CAACC,GAAG,EAAEP,OAAO,EAAE;IACzBA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,MAAM;MAAEQ,MAAM,GAAG,KAAK;MAAEC,IAAI;MAAEC,OAAO,GAAG,CAAC;IAAE,CAAC,GAAGV,OAAO;IACtD,IAAIW,QAAQ,GAAG,IAAI;IAEnB,IAAIF,IAAI,EAAE;MACRE,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IACjC;IAEA,MAAMK,WAAW,GAAGP,GAAG,CAACH,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAC3C,OAAOW,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,IAAGW,WAAY,EAAC,EAAE;MAC9CN,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEE,QAAQ;MACdD,OAAO,EAAE;QACP,GAAGA,OAAO;QACV,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCM,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,OAAOC,OAAO,CAACC,MAAM,CAAC;UAAC,UAAU,EAAEH;QAAG,CAAC,CAAC;MAC1C;MAEA,OAAOA,GAAG,CAACI,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAACjB,aAAa,CAAC;EAChC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}