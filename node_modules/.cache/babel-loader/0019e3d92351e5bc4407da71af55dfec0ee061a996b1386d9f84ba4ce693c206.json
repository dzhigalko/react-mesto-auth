{"ast":null,"code":"class AuthApi {\n  constructor(options) {\n    const {\n      baseUrl\n    } = options;\n    this._baseUrl = baseUrl;\n  }\n  _makeRequest(url, options) {\n    options = options || {};\n    const {\n      method = \"GET\",\n      body\n    } = options;\n    let jsonBody = null;\n    if (body) {\n      jsonBody = JSON.stringify(body);\n    }\n    return fetch(`${this._baseUrl}/${url}`, {\n      method: method,\n      body: jsonBody\n    }).then(res => {\n      if (!res.ok) {\n        return Promise.reject({\n          \"response\": res\n        });\n      }\n      return res.json();\n    });\n  }\n  signup(email, password) {\n    return this._makeRequest(\"/signup\", {\n      method: \"POST\",\n      body: {\n        password: password,\n        email: email\n      }\n    });\n  }\n}\nexport default new AuthApi({\n  baseUrl: \"https://auth.nomoreparties.co\"\n});","map":{"version":3,"names":["AuthApi","constructor","options","baseUrl","_baseUrl","_makeRequest","url","method","body","jsonBody","JSON","stringify","fetch","then","res","ok","Promise","reject","json","signup","email","password"],"sources":["/Users/d.zhigalko/dev/mesto-react/src/utils/authApi.js"],"sourcesContent":["class AuthApi {\n  constructor(options) {\n    const { baseUrl } = options;\n\n    this._baseUrl = baseUrl\n  }\n\n  _makeRequest(url, options) {\n    options = options || {}\n    const { method = \"GET\", body } = options;\n    let jsonBody = null;\n\n    if (body) {\n      jsonBody = JSON.stringify(body)\n    }\n\n    return fetch(`${this._baseUrl}/${url}`, {\n      method: method,\n      body: jsonBody\n    })\n      .then((res) => {\n        if (!res.ok) {\n          return Promise.reject({\"response\": res})\n        }\n\n        return res.json()\n      });\n  }\n\n  signup(email, password) {\n    return this._makeRequest(\"/signup\", {\n      method: \"POST\",\n      body: {\n        password: password,\n        email: email\n      }\n    })\n  }\n}\n\nexport default new AuthApi({\n  baseUrl: \"https://auth.nomoreparties.co\"\n})"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACZC,WAAWA,CAACC,OAAO,EAAE;IACnB,MAAM;MAAEC;IAAQ,CAAC,GAAGD,OAAO;IAE3B,IAAI,CAACE,QAAQ,GAAGD,OAAO;EACzB;EAEAE,YAAYA,CAACC,GAAG,EAAEJ,OAAO,EAAE;IACzBA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,MAAM;MAAEK,MAAM,GAAG,KAAK;MAAEC;IAAK,CAAC,GAAGN,OAAO;IACxC,IAAIO,QAAQ,GAAG,IAAI;IAEnB,IAAID,IAAI,EAAE;MACRC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACjC;IAEA,OAAOI,KAAK,CAAE,GAAE,IAAI,CAACR,QAAS,IAAGE,GAAI,EAAC,EAAE;MACtCC,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEC;IACR,CAAC,CAAC,CACCI,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,OAAOC,OAAO,CAACC,MAAM,CAAC;UAAC,UAAU,EAAEH;QAAG,CAAC,CAAC;MAC1C;MAEA,OAAOA,GAAG,CAACI,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC;EACN;EAEAC,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACtB,OAAO,IAAI,CAAChB,YAAY,CAAC,SAAS,EAAE;MAClCE,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QACJa,QAAQ,EAAEA,QAAQ;QAClBD,KAAK,EAAEA;MACT;IACF,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIpB,OAAO,CAAC;EACzBG,OAAO,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}