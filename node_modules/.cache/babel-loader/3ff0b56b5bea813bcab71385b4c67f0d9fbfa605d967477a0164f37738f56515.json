{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function useForm(inputValues) {\n  _s();\n  const initValidity = {};\n  const requiredInputs = [];\n  const initValues = {};\n  Object.keys(inputValues).forEach(key => {\n    initValidity[key] = true;\n    initValues[key] = '';\n    if (inputValues[key]) {\n      requiredInputs.push(key);\n    }\n  });\n  const [values, setValues] = useState(initValues);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [validity, setValidity] = useState(initValidity);\n  const [validationMessages, setValidationMessages] = useState(initValidity);\n  const handleChange = event => {\n    const {\n      value,\n      name,\n      validationMessage\n    } = event.target;\n    const isValid = event.target.checkValidity();\n    const newValidity = {\n      ...validity,\n      [name]: isValid\n    };\n    const newValidationMessages = {\n      ...validationMessages,\n      [name]: validationMessage\n    };\n    const newIsFormValid = Object.keys(newValidity).every(key => {\n      return newValidity[key] && requiredInputs.includes(name) || newValidity[key] === null;\n    });\n    setValues({\n      ...values,\n      [name]: value\n    });\n    setValidity(newValidity);\n    setIsFormValid(newIsFormValid);\n    setValidationMessages(newValidationMessages);\n  };\n  const resetForm = resetValues => {\n    resetValues = resetValues || {};\n    const newValidity = {};\n    const newValues = {};\n    const newValidationMessages = {};\n    Object.keys(inputValues).forEach(key => {\n      newValidity[key] = null;\n      newValues[key] = resetValues[key] || '';\n      newValidationMessages[key] = '';\n    });\n    setValidity(newValidity);\n    setValues(newValues);\n    setValidationMessages(newValidationMessages);\n    setIsFormValid(false);\n  };\n  return {\n    values,\n    validity,\n    validationMessages,\n    isFormValid,\n    handleChange,\n    resetForm\n  };\n}\n_s(useForm, \"WUw2hRvu+t845lSwGxWggWJCKZI=\");","map":{"version":3,"names":["useState","useForm","inputValues","_s","initValidity","requiredInputs","initValues","Object","keys","forEach","key","push","values","setValues","isFormValid","setIsFormValid","validity","setValidity","validationMessages","setValidationMessages","handleChange","event","value","name","validationMessage","target","isValid","checkValidity","newValidity","newValidationMessages","newIsFormValid","every","includes","resetForm","resetValues","newValues"],"sources":["/Users/d.zhigalko/dev/react-mesto-auth/src/hooks/useForm.js"],"sourcesContent":["import {useState} from \"react\";\n\nexport default function useForm(inputValues) {\n  const initValidity = {}\n  const requiredInputs = []\n  const initValues = {}\n\n  Object.keys(inputValues).forEach((key) => {\n    initValidity[key] = true\n    initValues[key] = ''\n\n    if (inputValues[key]) {\n      requiredInputs.push(key)\n    }\n  })\n\n  const [values, setValues] = useState(initValues)\n  const [isFormValid, setIsFormValid] = useState(false)\n  const [validity, setValidity] = useState(initValidity)\n  const [validationMessages, setValidationMessages] = useState(initValidity)\n\n  const handleChange = (event) => {\n    const {value, name, validationMessage} = event.target\n    const isValid = event.target.checkValidity()\n\n    const newValidity = {...validity, [name]: isValid }\n    const newValidationMessages = {...validationMessages, [name]: validationMessage}\n\n    const newIsFormValid = Object.keys(newValidity).every((key) => {\n      return (newValidity[key] && requiredInputs.includes(name)) || newValidity[key] === null\n    })\n\n    setValues({...values, [name]: value})\n    setValidity(newValidity)\n    setIsFormValid(newIsFormValid)\n    setValidationMessages(newValidationMessages)\n  }\n\n  const resetForm = (resetValues) => {\n    resetValues = resetValues || {}\n    const newValidity = {}\n    const newValues = {}\n    const newValidationMessages = {}\n\n    Object.keys(inputValues).forEach((key) => {\n      newValidity[key] = null\n      newValues[key] = resetValues[key] || ''\n      newValidationMessages[key] = ''\n    })\n\n    setValidity(newValidity)\n    setValues(newValues)\n    setValidationMessages(newValidationMessages)\n    setIsFormValid(false)\n  }\n\n  return {values, validity, validationMessages, isFormValid, handleChange, resetForm}\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,eAAe,SAASC,OAAOA,CAACC,WAAW,EAAE;EAAAC,EAAA;EAC3C,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvB,MAAMC,cAAc,GAAG,EAAE;EACzB,MAAMC,UAAU,GAAG,CAAC,CAAC;EAErBC,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC,CAACO,OAAO,CAAEC,GAAG,IAAK;IACxCN,YAAY,CAACM,GAAG,CAAC,GAAG,IAAI;IACxBJ,UAAU,CAACI,GAAG,CAAC,GAAG,EAAE;IAEpB,IAAIR,WAAW,CAACQ,GAAG,CAAC,EAAE;MACpBL,cAAc,CAACM,IAAI,CAACD,GAAG,CAAC;IAC1B;EACF,CAAC,CAAC;EAEF,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACM,UAAU,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAACI,YAAY,CAAC;EACtD,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAACI,YAAY,CAAC;EAE1E,MAAMgB,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAACC,KAAK;MAAEC,IAAI;MAAEC;IAAiB,CAAC,GAAGH,KAAK,CAACI,MAAM;IACrD,MAAMC,OAAO,GAAGL,KAAK,CAACI,MAAM,CAACE,aAAa,CAAC,CAAC;IAE5C,MAAMC,WAAW,GAAG;MAAC,GAAGZ,QAAQ;MAAE,CAACO,IAAI,GAAGG;IAAQ,CAAC;IACnD,MAAMG,qBAAqB,GAAG;MAAC,GAAGX,kBAAkB;MAAE,CAACK,IAAI,GAAGC;IAAiB,CAAC;IAEhF,MAAMM,cAAc,GAAGvB,MAAM,CAACC,IAAI,CAACoB,WAAW,CAAC,CAACG,KAAK,CAAErB,GAAG,IAAK;MAC7D,OAAQkB,WAAW,CAAClB,GAAG,CAAC,IAAIL,cAAc,CAAC2B,QAAQ,CAACT,IAAI,CAAC,IAAKK,WAAW,CAAClB,GAAG,CAAC,KAAK,IAAI;IACzF,CAAC,CAAC;IAEFG,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAE,CAACW,IAAI,GAAGD;IAAK,CAAC,CAAC;IACrCL,WAAW,CAACW,WAAW,CAAC;IACxBb,cAAc,CAACe,cAAc,CAAC;IAC9BX,qBAAqB,CAACU,qBAAqB,CAAC;EAC9C,CAAC;EAED,MAAMI,SAAS,GAAIC,WAAW,IAAK;IACjCA,WAAW,GAAGA,WAAW,IAAI,CAAC,CAAC;IAC/B,MAAMN,WAAW,GAAG,CAAC,CAAC;IACtB,MAAMO,SAAS,GAAG,CAAC,CAAC;IACpB,MAAMN,qBAAqB,GAAG,CAAC,CAAC;IAEhCtB,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC,CAACO,OAAO,CAAEC,GAAG,IAAK;MACxCkB,WAAW,CAAClB,GAAG,CAAC,GAAG,IAAI;MACvByB,SAAS,CAACzB,GAAG,CAAC,GAAGwB,WAAW,CAACxB,GAAG,CAAC,IAAI,EAAE;MACvCmB,qBAAqB,CAACnB,GAAG,CAAC,GAAG,EAAE;IACjC,CAAC,CAAC;IAEFO,WAAW,CAACW,WAAW,CAAC;IACxBf,SAAS,CAACsB,SAAS,CAAC;IACpBhB,qBAAqB,CAACU,qBAAqB,CAAC;IAC5Cd,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,OAAO;IAACH,MAAM;IAAEI,QAAQ;IAAEE,kBAAkB;IAAEJ,WAAW;IAAEM,YAAY;IAAEa;EAAS,CAAC;AACrF;AAAC9B,EAAA,CAvDuBF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}