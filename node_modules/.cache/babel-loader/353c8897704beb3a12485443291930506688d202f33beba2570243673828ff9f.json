{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function useForm(inputValues) {\n  _s();\n  const initValidity = {};\n  const requiredInputs = [];\n  const initValues = {};\n  const initValidationMessages = {};\n  Object.keys(inputValues).forEach(key => {\n    initValidity[key] = true;\n    initValues[key] = '';\n    initValidationMessages[key] = '';\n    if (inputValues[key]) {\n      requiredInputs.push(key);\n    }\n  });\n  const [values, setValues] = useState(initValues);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [validity, setValidity] = useState(initValidity);\n  const [validationMessages, setValidationMessages] = useState(initValidationMessages);\n  const [validatedFields, setValidatedFields] = useState([]);\n  const [formState, setFormState] = useState({\n    values: initValues,\n    validity: initValidity,\n    validationMessages: initValidationMessages,\n    isFormValid: false,\n    validatedFields: [],\n    requiredInputs\n  });\n  const handleChange = event => {\n    const {\n      value,\n      name,\n      validationMessage\n    } = event.target;\n    const isValid = event.target.checkValidity();\n    const newValidity = {\n      ...validity,\n      [name]: isValid\n    };\n    const newValidationMessages = {\n      ...validationMessages,\n      [name]: validationMessage\n    };\n    const newIsFormValid = Object.keys(newValidity).every(key => {\n      return newValidity[key] && requiredInputs.includes(name) || newValidity[key] === null;\n    });\n    setFormState({\n      ...formState,\n      values: {\n        ...values,\n        [name]: value\n      },\n      validity: newValidity,\n      validationMessages: newValidationMessages,\n      isFormValid: newIsFormValid\n    });\n  };\n  const resetForm = resetValues => {\n    resetValues = resetValues || {};\n    const newValidity = {};\n    const newValues = {};\n    const newValidationMessages = {};\n    Object.keys(inputValues).forEach(key => {\n      newValidity[key] = true;\n      newValues[key] = resetValues[key] || '';\n      newValidationMessages[key] = '';\n    });\n    setFormState({\n      ...formState,\n      values: newValues,\n      validity: newValidity,\n      validationMessages: newValidationMessages,\n      isFormValid: false,\n      validatedFields: []\n    });\n  };\n  return {\n    formState,\n    handleChange,\n    resetForm\n  };\n}\n_s(useForm, \"k+mjjpvjcffTl1ylKDSkLb3V4FE=\");","map":{"version":3,"names":["useState","useForm","inputValues","_s","initValidity","requiredInputs","initValues","initValidationMessages","Object","keys","forEach","key","push","values","setValues","isFormValid","setIsFormValid","validity","setValidity","validationMessages","setValidationMessages","validatedFields","setValidatedFields","formState","setFormState","handleChange","event","value","name","validationMessage","target","isValid","checkValidity","newValidity","newValidationMessages","newIsFormValid","every","includes","resetForm","resetValues","newValues"],"sources":["/Users/d.zhigalko/dev/react-mesto-auth/src/hooks/useForm.js"],"sourcesContent":["import {useState} from \"react\";\n\nexport default function useForm(inputValues) {\n  const initValidity = {}\n  const requiredInputs = []\n  const initValues = {}\n  const initValidationMessages = {}\n\n  Object.keys(inputValues).forEach((key) => {\n    initValidity[key] = true\n    initValues[key] = ''\n    initValidationMessages[key] = ''\n\n    if (inputValues[key]) {\n      requiredInputs.push(key)\n    }\n  })\n\n  const [values, setValues] = useState(initValues)\n  const [isFormValid, setIsFormValid] = useState(false)\n  const [validity, setValidity] = useState(initValidity)\n  const [validationMessages, setValidationMessages] = useState(initValidationMessages)\n  const [validatedFields, setValidatedFields] = useState([])\n\n  const [formState, setFormState] = useState({\n    values: initValues,\n    validity: initValidity,\n    validationMessages: initValidationMessages,\n    isFormValid: false,\n    validatedFields: [],\n    requiredInputs,\n  })\n\n  const handleChange = (event) => {\n    const {value, name, validationMessage} = event.target\n    const isValid = event.target.checkValidity()\n\n    const newValidity = {...validity, [name]: isValid }\n    const newValidationMessages = {...validationMessages, [name]: validationMessage}\n\n    const newIsFormValid = Object.keys(newValidity).every((key) => {\n      return (newValidity[key] && requiredInputs.includes(name)) || newValidity[key] === null\n    })\n\n    setFormState({\n      ...formState,\n      values: {...values, [name]: value},\n      validity: newValidity,\n      validationMessages: newValidationMessages,\n      isFormValid: newIsFormValid,\n    })\n  }\n\n  const resetForm = (resetValues) => {\n    resetValues = resetValues || {}\n    const newValidity = {}\n    const newValues = {}\n    const newValidationMessages = {}\n\n    Object.keys(inputValues).forEach((key) => {\n      newValidity[key] = true\n      newValues[key] = resetValues[key] || ''\n      newValidationMessages[key] = ''\n    })\n\n    setFormState({\n      ...formState,\n      values: newValues,\n      validity: newValidity,\n      validationMessages: newValidationMessages,\n      isFormValid: false,\n      validatedFields: []\n    })\n  }\n\n  return {formState, handleChange, resetForm}\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,eAAe,SAASC,OAAOA,CAACC,WAAW,EAAE;EAAAC,EAAA;EAC3C,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvB,MAAMC,cAAc,GAAG,EAAE;EACzB,MAAMC,UAAU,GAAG,CAAC,CAAC;EACrB,MAAMC,sBAAsB,GAAG,CAAC,CAAC;EAEjCC,MAAM,CAACC,IAAI,CAACP,WAAW,CAAC,CAACQ,OAAO,CAAEC,GAAG,IAAK;IACxCP,YAAY,CAACO,GAAG,CAAC,GAAG,IAAI;IACxBL,UAAU,CAACK,GAAG,CAAC,GAAG,EAAE;IACpBJ,sBAAsB,CAACI,GAAG,CAAC,GAAG,EAAE;IAEhC,IAAIT,WAAW,CAACS,GAAG,CAAC,EAAE;MACpBN,cAAc,CAACO,IAAI,CAACD,GAAG,CAAC;IAC1B;EACF,CAAC,CAAC;EAEF,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAACM,UAAU,CAAC;EAChD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAACI,YAAY,CAAC;EACtD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpB,QAAQ,CAACO,sBAAsB,CAAC;EACpF,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC;IACzCa,MAAM,EAAEP,UAAU;IAClBW,QAAQ,EAAEb,YAAY;IACtBe,kBAAkB,EAAEZ,sBAAsB;IAC1CQ,WAAW,EAAE,KAAK;IAClBM,eAAe,EAAE,EAAE;IACnBhB;EACF,CAAC,CAAC;EAEF,MAAMoB,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAACC,KAAK;MAAEC,IAAI;MAAEC;IAAiB,CAAC,GAAGH,KAAK,CAACI,MAAM;IACrD,MAAMC,OAAO,GAAGL,KAAK,CAACI,MAAM,CAACE,aAAa,CAAC,CAAC;IAE5C,MAAMC,WAAW,GAAG;MAAC,GAAGhB,QAAQ;MAAE,CAACW,IAAI,GAAGG;IAAQ,CAAC;IACnD,MAAMG,qBAAqB,GAAG;MAAC,GAAGf,kBAAkB;MAAE,CAACS,IAAI,GAAGC;IAAiB,CAAC;IAEhF,MAAMM,cAAc,GAAG3B,MAAM,CAACC,IAAI,CAACwB,WAAW,CAAC,CAACG,KAAK,CAAEzB,GAAG,IAAK;MAC7D,OAAQsB,WAAW,CAACtB,GAAG,CAAC,IAAIN,cAAc,CAACgC,QAAQ,CAACT,IAAI,CAAC,IAAKK,WAAW,CAACtB,GAAG,CAAC,KAAK,IAAI;IACzF,CAAC,CAAC;IAEFa,YAAY,CAAC;MACX,GAAGD,SAAS;MACZV,MAAM,EAAE;QAAC,GAAGA,MAAM;QAAE,CAACe,IAAI,GAAGD;MAAK,CAAC;MAClCV,QAAQ,EAAEgB,WAAW;MACrBd,kBAAkB,EAAEe,qBAAqB;MACzCnB,WAAW,EAAEoB;IACf,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,SAAS,GAAIC,WAAW,IAAK;IACjCA,WAAW,GAAGA,WAAW,IAAI,CAAC,CAAC;IAC/B,MAAMN,WAAW,GAAG,CAAC,CAAC;IACtB,MAAMO,SAAS,GAAG,CAAC,CAAC;IACpB,MAAMN,qBAAqB,GAAG,CAAC,CAAC;IAEhC1B,MAAM,CAACC,IAAI,CAACP,WAAW,CAAC,CAACQ,OAAO,CAAEC,GAAG,IAAK;MACxCsB,WAAW,CAACtB,GAAG,CAAC,GAAG,IAAI;MACvB6B,SAAS,CAAC7B,GAAG,CAAC,GAAG4B,WAAW,CAAC5B,GAAG,CAAC,IAAI,EAAE;MACvCuB,qBAAqB,CAACvB,GAAG,CAAC,GAAG,EAAE;IACjC,CAAC,CAAC;IAEFa,YAAY,CAAC;MACX,GAAGD,SAAS;MACZV,MAAM,EAAE2B,SAAS;MACjBvB,QAAQ,EAAEgB,WAAW;MACrBd,kBAAkB,EAAEe,qBAAqB;MACzCnB,WAAW,EAAE,KAAK;MAClBM,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IAACE,SAAS;IAAEE,YAAY;IAAEa;EAAS,CAAC;AAC7C;AAACnC,EAAA,CA1EuBF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}