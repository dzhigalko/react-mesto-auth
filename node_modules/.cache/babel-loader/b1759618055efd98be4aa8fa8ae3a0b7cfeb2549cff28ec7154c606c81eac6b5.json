{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function useForm(inputValues) {\n  _s();\n  const initValidity = {};\n  const requiredInputs = [];\n  const initValues = {};\n  const initValidationMessages = {};\n  Object.keys(inputValues).forEach(key => {\n    initValidity[key] = true;\n    initValues[key] = '';\n    initValidationMessages[key] = '';\n    if (inputValues[key]) {\n      requiredInputs.push(key);\n    }\n  });\n  const [formState, setFormState] = useState({\n    values: initValues,\n    validity: initValidity,\n    validationMessages: initValidationMessages,\n    isFormValid: false,\n    validatedFields: [],\n    requiredInputs\n  });\n  const handleChange = event => {\n    const {\n      value,\n      name,\n      validationMessage\n    } = event.target;\n    const isValid = event.target.checkValidity();\n    const validity = {\n      ...formState.validity,\n      [name]: isValid\n    };\n    const validationMessages = {\n      ...formState.validationMessages,\n      [name]: validationMessage\n    };\n    let validatedFields = formState.validatedFields;\n    if (!formState.validatedFields.includes(name)) {\n      validatedFields = [...validatedFields, name];\n    }\n    const isAllRequiredFieldsValidated = validatedFields.length === formState.requiredInputs.length && validatedFields.every(v => formState.requiredInputs.includes(v));\n    const isFormValid = Object.values(validity).every(v => v === true) && isAllRequiredFieldsValidated;\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [name]: value\n      },\n      validity: validity,\n      validationMessages: validationMessages,\n      isFormValid: isFormValid,\n      validatedFields: validatedFields\n    });\n  };\n  const resetForm = resetValues => {\n    resetValues = resetValues || {};\n    const newValidity = {};\n    const newValues = {};\n    const newValidationMessages = {};\n    Object.keys(inputValues).forEach(key => {\n      newValidity[key] = true;\n      newValues[key] = resetValues[key] || '';\n      newValidationMessages[key] = '';\n    });\n    setFormState({\n      ...formState,\n      values: newValues,\n      validity: newValidity,\n      validationMessages: newValidationMessages,\n      isFormValid: false,\n      validatedFields: []\n    });\n  };\n  return {\n    formState,\n    handleChange,\n    resetForm\n  };\n}\n_s(useForm, \"ikaqdpUngEc3mRKhMBtaR5BVdYU=\");","map":{"version":3,"names":["useState","useForm","inputValues","_s","initValidity","requiredInputs","initValues","initValidationMessages","Object","keys","forEach","key","push","formState","setFormState","values","validity","validationMessages","isFormValid","validatedFields","handleChange","event","value","name","validationMessage","target","isValid","checkValidity","includes","isAllRequiredFieldsValidated","length","every","v","resetForm","resetValues","newValidity","newValues","newValidationMessages"],"sources":["/Users/d.zhigalko/dev/react-mesto-auth/src/hooks/useForm.js"],"sourcesContent":["import {useState} from \"react\";\n\nexport default function useForm(inputValues) {\n  const initValidity = {}\n  const requiredInputs = []\n  const initValues = {}\n  const initValidationMessages = {}\n\n  Object.keys(inputValues).forEach((key) => {\n    initValidity[key] = true\n    initValues[key] = ''\n    initValidationMessages[key] = ''\n\n    if (inputValues[key]) {\n      requiredInputs.push(key)\n    }\n  })\n\n  const [formState, setFormState] = useState({\n    values: initValues,\n    validity: initValidity,\n    validationMessages: initValidationMessages,\n    isFormValid: false,\n    validatedFields: [],\n    requiredInputs,\n  })\n\n  const handleChange = (event) => {\n    const {value, name, validationMessage} = event.target\n    const isValid = event.target.checkValidity()\n\n    const validity = {...formState.validity, [name]: isValid }\n    const validationMessages = {...formState.validationMessages, [name]: validationMessage}\n    let validatedFields = formState.validatedFields\n\n    if (!formState.validatedFields.includes(name)) {\n      validatedFields = [...validatedFields, name]\n    }\n\n    const isAllRequiredFieldsValidated = validatedFields.length === formState.requiredInputs.length\n      && validatedFields.every(v => formState.requiredInputs.includes(v))\n    const isFormValid = Object.values(validity).every(v => v === true) && isAllRequiredFieldsValidated\n\n    setFormState({\n      ...formState,\n      values: {...formState.values, [name]: value},\n      validity: validity,\n      validationMessages: validationMessages,\n      isFormValid: isFormValid,\n      validatedFields: validatedFields\n    })\n  }\n\n  const resetForm = (resetValues) => {\n    resetValues = resetValues || {}\n    const newValidity = {}\n    const newValues = {}\n    const newValidationMessages = {}\n\n    Object.keys(inputValues).forEach((key) => {\n      newValidity[key] = true\n      newValues[key] = resetValues[key] || ''\n      newValidationMessages[key] = ''\n    })\n\n    setFormState({\n      ...formState,\n      values: newValues,\n      validity: newValidity,\n      validationMessages: newValidationMessages,\n      isFormValid: false,\n      validatedFields: []\n    })\n  }\n\n  return {formState, handleChange, resetForm}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}