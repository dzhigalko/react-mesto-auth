{"ast":null,"code":"class Api {\n  constructor(options) {\n    const {\n      baseUrl,\n      token,\n      errorHandler\n    } = options;\n    this._baseUrl = baseUrl;\n    this._token = token;\n    this._errorHandler = errorHandler;\n  }\n  _makeRequest(url, options) {\n    options = options || {};\n    const {\n      method = \"GET\",\n      body\n    } = options;\n    let jsonBody = null;\n    if (body) {\n      jsonBody = JSON.stringify(body);\n    }\n    return fetch(`${this._baseUrl}/${url}`, {\n      method: method,\n      body: jsonBody,\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        return Promise.reject({\n          \"response\": res\n        });\n      }\n      return res.json();\n    }).catch(this._errorHandler);\n  }\n  getInitialCards() {\n    return this._makeRequest(\"/cards\");\n  }\n  getUserProfile() {\n    return this._makeRequest(\"/users/me\");\n  }\n  changeUserProfile(name, about) {\n    return this._makeRequest(\"/users/me\", {\n      method: \"PATCH\",\n      body: {\n        name: name,\n        about: about\n      }\n    });\n  }\n  addCard(name, link) {\n    return this._makeRequest(\"/cards\", {\n      method: \"POST\",\n      body: {\n        name: name,\n        link: link\n      }\n    });\n  }\n  deleteCard(id) {\n    return this._makeRequest(`/cards/${id}`, {\n      method: \"DELETE\"\n    });\n  }\n  addCardLike(id) {\n    return this._makeRequest(`/cards/${id}/likes`, {\n      method: \"PUT\"\n    });\n  }\n  deleteCardLike(id) {\n    return this._makeRequest(`/cards/${id}/likes`, {\n      method: \"DELETE\"\n    });\n  }\n  changeAvatar(avatar) {\n    return this._makeRequest(\"/users/me/avatar\", {\n      method: \"PATCH\",\n      body: {\n        avatar: avatar\n      }\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  token: \"31abe394-3f89-489d-9ccd-e96da397bf7c\",\n  errorHandler: args => console.log(args)\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","baseUrl","token","errorHandler","_baseUrl","_token","_errorHandler","_makeRequest","url","method","body","jsonBody","JSON","stringify","fetch","headers","authorization","then","res","ok","Promise","reject","json","catch","getInitialCards","getUserProfile","changeUserProfile","name","about","addCard","link","deleteCard","id","addCardLike","deleteCardLike","changeAvatar","avatar","api","args","console","log"],"sources":["/Users/d.zhigalko/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        const { baseUrl, token, errorHandler } = options;\n\n        this._baseUrl = baseUrl\n        this._token = token\n        this._errorHandler = errorHandler\n    }\n\n    _makeRequest(url, options) {\n        options = options || {}\n        const { method = \"GET\", body } = options;\n        let jsonBody = null;\n\n        if (body) {\n            jsonBody = JSON.stringify(body)\n        }\n\n        return fetch(`${this._baseUrl}/${url}`, {\n            method: method,\n            body: jsonBody,\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then((res) => {\n                if (!res.ok) {\n                    return Promise.reject({\"response\": res})\n                }\n\n                return res.json()\n            }).catch(this._errorHandler);\n    }\n\n    getInitialCards() {\n        return this._makeRequest(\"/cards\")\n    }\n\n    getUserProfile() {\n        return this._makeRequest(\"/users/me\")\n    }\n\n    changeUserProfile(name, about) {\n        return this._makeRequest(\"/users/me\", {\n            method: \"PATCH\",\n            body: {\n                name: name,\n                about: about\n            }\n        })\n    }\n\n    addCard(name, link) {\n        return this._makeRequest(\"/cards\", {\n            method: \"POST\",\n            body: {\n                name: name,\n                link: link\n            }\n        })\n    }\n\n    deleteCard(id) {\n        return this._makeRequest(`/cards/${id}`, { method: \"DELETE\" });\n    }\n\n    addCardLike(id) {\n        return this._makeRequest(`/cards/${id}/likes`, { method: \"PUT\" });\n    }\n\n    deleteCardLike(id) {\n        return this._makeRequest(`/cards/${id}/likes`, { method: \"DELETE\" });\n    }\n\n    changeAvatar(avatar) {\n        return this._makeRequest(\"/users/me/avatar\", {\n            method: \"PATCH\",\n            body: {\n                avatar: avatar\n            }\n        })\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n    token: \"31abe394-3f89-489d-9ccd-e96da397bf7c\",\n    errorHandler: (args) => console.log(args)}\n)\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}