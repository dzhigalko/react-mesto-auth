{"ast":null,"code":"var _jsxFileName = \"/Users/d.zhigalko/dev/react-mesto-auth/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport Index from \"./Index/Index\";\nimport ProtectedRoute from \"./ProtectedRoute/ProtectedRoute\";\nimport Login from \"./Login/Login\";\nimport Register from \"./Register/Register\";\nimport PageLayout from \"./PageLayout/PageLayout\";\nimport authApi from \"../utils/authApi\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [authenticatedUser, setAuthenticatedUser] = useState({});\n  const {\n    token,\n    login\n  } = useContext(AuthContext);\n  useEffect(() => {\n    authApi.getCurrentUser(token).then(user => setAuthenticatedUser(user)).catch(console.error);\n  }, [token]);\n  function handleSignIn(_ref) {\n    let {\n      token\n    } = _ref;\n    login(token);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(PageLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onSignin: handleSignIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            user: authenticatedUser,\n            redirectPath: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F/mdZepFKWgcT58rsOHxlR2k9p8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useContext","useEffect","useState","BrowserRouter","Routes","Route","Navigate","Index","ProtectedRoute","Login","Register","PageLayout","authApi","AuthContext","jsxDEV","_jsxDEV","App","_s","authenticatedUser","setAuthenticatedUser","token","login","getCurrentUser","then","user","catch","console","error","handleSignIn","_ref","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","onSignin","index","redirectPath","to","replace","_c","$RefreshReg$"],"sources":["/Users/d.zhigalko/dev/react-mesto-auth/src/components/App.jsx"],"sourcesContent":["import {useContext, useEffect, useState} from \"react\";\nimport {BrowserRouter, Routes, Route, Navigate} from \"react-router-dom\";\nimport Index from \"./Index/Index\";\nimport ProtectedRoute from \"./ProtectedRoute/ProtectedRoute\";\nimport Login from \"./Login/Login\";\nimport Register from \"./Register/Register\";\nimport PageLayout from \"./PageLayout/PageLayout\";\nimport authApi from \"../utils/authApi\";\nimport AuthContext from \"../contexts/AuthContext\";\n\nexport default function App() {\n  const [authenticatedUser, setAuthenticatedUser] = useState({})\n  const { token, login } = useContext(AuthContext)\n\n  useEffect(() => {\n    authApi.getCurrentUser(token)\n      .then((user) => setAuthenticatedUser(user))\n      .catch(console.error)\n  }, [token])\n\n  function handleSignIn({ token }) {\n    login(token)\n  }\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route element={<PageLayout/>}>\n          <Route path=\"/sign-in\" element={<Login onSignin={handleSignIn}/>}/>\n          <Route path=\"/sign-up\" element={<Register/>}/>\n          <Route index path=\"/\" element={\n            <ProtectedRoute user={authenticatedUser} redirectPath={\"/sign-up\"}>\n              <Index/>\n            </ProtectedRoute>\n          }/>\n          <Route path=\"*\" element={<Navigate to=\"/\" replace/>}/>\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}