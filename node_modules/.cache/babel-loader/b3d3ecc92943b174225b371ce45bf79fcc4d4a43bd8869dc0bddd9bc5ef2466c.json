{"ast":null,"code":"var _jsxFileName = \"/Users/d.zhigalko/dev/react-mesto-auth/src/components/AddPlacePopup/AddPlacePopup.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport useForm from \"../../hooks/useForm\";\nimport PopupInput from \"../PopupInput/PopupInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPlacePopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onAddPlace\n  } = _ref;\n  const {\n    values,\n    resetForm,\n    handleChange,\n    isFormValid,\n    validity\n  } = useForm({\n    name: true,\n    link: true\n  });\n  useEffect(() => {\n    resetForm();\n  }, [isOpen]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({\n      name: values.name,\n      link: values.link\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"add-place\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    titleButton: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isValid: isFormValid,\n    children: [/*#__PURE__*/_jsxDEV(PopupInput, {\n      required: true,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      minLength: 2,\n      maxLength: 30,\n      value: values.name,\n      onChange: handleChange,\n      isValid: validity.name === null,\n      validationMessage: validity.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupInput, {\n      required: true,\n      name: \"link\",\n      type: \"url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      value: values.link,\n      onChange: handleChange,\n      isValid: validity.link === null,\n      validationMessage: validity.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlacePopup, \"qvZrWgTRa+X5zdcrqe1KN8lH4AM=\", false, function () {\n  return [useForm];\n});\n_c = AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["useEffect","PopupWithForm","useForm","PopupInput","jsxDEV","_jsxDEV","AddPlacePopup","_ref","_s","isOpen","onClose","onAddPlace","values","resetForm","handleChange","isFormValid","validity","name","link","handleSubmit","e","preventDefault","title","titleButton","onSubmit","isValid","children","required","type","placeholder","minLength","maxLength","value","onChange","validationMessage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/d.zhigalko/dev/react-mesto-auth/src/components/AddPlacePopup/AddPlacePopup.jsx"],"sourcesContent":["import {useEffect} from \"react\";\n\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport useForm from \"../../hooks/useForm\";\nimport PopupInput from \"../PopupInput/PopupInput\"\nexport default function AddPlacePopup({isOpen, onClose, onAddPlace}) {\n  const {values, resetForm, handleChange, isFormValid, validity} = useForm({\n    name: true,\n    link: true\n  })\n\n  useEffect(() => {\n    resetForm()\n  }, [isOpen])\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    onAddPlace({\n      name: values.name,\n      link: values.link\n    })\n  }\n\n  return (\n    <PopupWithForm\n      name='add-place'\n      title='Новое место'\n      titleButton='Создать'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isValid={isFormValid}\n    >\n      <PopupInput\n        required={true}\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Название\"\n        minLength={2}\n        maxLength={30}\n        value={values.name}\n        onChange={handleChange}\n        isValid={validity.name === null}\n        validationMessage={validity.name}\n      />\n      <PopupInput\n        required={true}\n        name=\"link\"\n        type=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        value={values.link}\n        onChange={handleChange}\n        isValid={validity.link === null}\n        validationMessage={validity.link}\n      />\n    </PopupWithForm>\n  )\n}"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,OAAO;AAE/B,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACjD,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAgC;EAAAC,EAAA;EAAA,IAA/B;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EACjE,MAAM;IAACK,MAAM;IAAEC,SAAS;IAAEC,YAAY;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGd,OAAO,CAAC;IACvEe,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,SAASU,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBV,UAAU,CAAC;MACTM,IAAI,EAAEL,MAAM,CAACK,IAAI;MACjBC,IAAI,EAAEN,MAAM,CAACM;IACf,CAAC,CAAC;EACJ;EAEA,oBACEb,OAAA,CAACJ,aAAa;IACZgB,IAAI,EAAC,WAAW;IAChBK,KAAK,EAAC,+DAAa;IACnBC,WAAW,EAAC,4CAAS;IACrBd,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBc,QAAQ,EAAEL,YAAa;IACvBM,OAAO,EAAEV,WAAY;IAAAW,QAAA,gBAErBrB,OAAA,CAACF,UAAU;MACTwB,QAAQ,EAAE,IAAK;MACfV,IAAI,EAAC,MAAM;MACXW,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kDAAU;MACtBC,SAAS,EAAE,CAAE;MACbC,SAAS,EAAE,EAAG;MACdC,KAAK,EAAEpB,MAAM,CAACK,IAAK;MACnBgB,QAAQ,EAAEnB,YAAa;MACvBW,OAAO,EAAET,QAAQ,CAACC,IAAI,KAAK,IAAK;MAChCiB,iBAAiB,EAAElB,QAAQ,CAACC;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFjC,OAAA,CAACF,UAAU;MACTwB,QAAQ,EAAE,IAAK;MACfV,IAAI,EAAC,MAAM;MACXW,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,oGAAoB;MAChCG,KAAK,EAAEpB,MAAM,CAACM,IAAK;MACnBe,QAAQ,EAAEnB,YAAa;MACvBW,OAAO,EAAET,QAAQ,CAACE,IAAI,KAAK,IAAK;MAChCgB,iBAAiB,EAAElB,QAAQ,CAACE;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB;AAAC9B,EAAA,CArDuBF,aAAa;EAAA,QAC8BJ,OAAO;AAAA;AAAAqC,EAAA,GADlDjC,aAAa;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}